import { LitElement } from 'lit';

export type DssTimepickerOption = {
    value: string;
    state: string;
};
export declare class Timepicker extends LitElement {
    static get styles(): import('lit').CSSResult[];
    private get _input();
    private get _label();
    set value(value: string);
    set invalid(invalid: boolean);
    set inputSize(size: string);
    set helpText(text: string);
    set errorTimeFormatText(text: string);
    set errorTimeOptionText(text: string);
    set dropdown(value: string);
    set showDropdown(state: boolean);
    set minutesRange(value: number);
    set minHour(value: number);
    set maxHour(value: number);
    set customTimeListOptions(options: DssTimepickerOption[]);
    set icon(icon: string);
    private _value;
    private _placeholder;
    private _inputSize;
    private _dropdown;
    private _required;
    private _disabled;
    private _readonly;
    private _invalid;
    private _showDropdown;
    private _helpText;
    private _oldHelpText;
    private _errorTimeFormatText;
    private _errorTimeOptionText;
    private _manualHourSelector;
    private _manualMinuteSelector;
    private _minutesRange;
    private _minHour;
    private _maxHour;
    private _timeListOptions;
    private _customTimeListOptions;
    private _timeManualHourOptions;
    private _timeManualMinutesOptions;
    private _icon;
    private _inputValidity;
    private _isFirstUpdated;
    private observerConfig;
    private callback;
    private observer;
    disconnectedCallback(): void;
    firstUpdated(): Promise<void>;
    private _updateTimeOptions;
    private _checkInputAttributes;
    private _handleValidity;
    private _closeDropdown;
    private _timePattern;
    private _timeSeparator;
    private _timeInputOldValue;
    private _timeMask;
    private _timeUnmask;
    private _timeValidate;
    private _dispatchValueChange;
    private _handleClick;
    private _handleInput;
    private _handleKeyDown;
    private _handleFocus;
    private _handleBlur;
    private _focusInput;
    private _generateTimeListOptions;
    private _generateTimeListOptionsHTML;
    private _generateTimeManualHoursOptions;
    private _generateTimeManualMinutesOptions;
    private _generateTimeManualOptionsHTML;
    private _checkDisableTimeManualSelector;
    private _timeManualSelectorCancel;
    private _timeManualSelectorAccept;
    private _timeListOptionsScrollTo;
    private _timeManualOptionsScrollTo;
    render(): import('lit-html').TemplateResult<1>;
}
