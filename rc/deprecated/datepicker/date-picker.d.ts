import { LitElement } from 'lit';

export declare class DatePicker extends LitElement {
    static formAssociated: boolean;
    static shadowRootOptions: {
        delegatesFocus: boolean;
        mode: ShadowRootMode;
        slotAssignment?: SlotAssignmentMode | undefined;
    };
    static get styles(): import('lit').CSSResult;
    get _input(): HTMLInputElement;
    set value(value: string);
    set label(label: string);
    set placeHolder(placeHolder: string);
    set required(required: boolean);
    set disabled(disabled: boolean);
    set readonly(readonly: boolean);
    set showTime(showTime: boolean);
    set showButtons(showButtons: boolean);
    set leftLabel(leftLabel: string);
    set rightLabel(rightLabel: string);
    set minDate(minDate: string);
    set maxDate(maxDate: string);
    set invalid(invalid: boolean);
    private _value;
    private _label;
    private _placeHolder;
    private _previousDate;
    private _minDate;
    private _maxDate;
    private _showCalendar;
    private _showTime;
    private _invalid;
    private _showButtons;
    private _required;
    private _disabled;
    private _readonly;
    private _leftLabel;
    private _rightLabel;
    private _isFocused;
    private _internals;
    get value(): string;
    get form(): HTMLFormElement | null;
    get name(): string | null;
    get type(): string;
    get validity(): ValidityState;
    get validationMessage(): string;
    get willValidate(): boolean;
    checkValidity(): boolean;
    reportValidity(): boolean;
    formResetCallback(): void;
    firstUpdated(): Promise<void>;
    private _closeDropdown;
    private _handleKeyUp;
    private _handleInput;
    private _formatDate;
    private _handleFocus;
    private _handleBlur;
    private _handelLabelClick;
    private _onDateChange;
    private _onCancel;
    private _onclick;
    private _dispatchValueChange;
    render(): import('lit-html').TemplateResult<1>;
}
