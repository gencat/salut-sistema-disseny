import { LitElement } from 'lit';

type MenuItem = {
    label: string;
    icon?: string;
    selected?: boolean;
    disabled?: boolean;
    notifications?: number;
    nestedMenu?: MenuItem[];
};
export declare class Sidemenu_ extends LitElement {
    static get styles(): import('lit').CSSResult[];
    private _handleDocumentClickBound;
    private _handleResizeBound;
    private _handleContainerScrollBound;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    createMenuItems: MenuItem[];
    roleMenuItems: MenuItem[];
    globalMenuItems: MenuItem[];
    axiaHidden: boolean;
    axiaDisabled: boolean;
    axiaLabel: string;
    set expanded(value: boolean);
    get expanded(): boolean;
    set disabled(value: boolean);
    get disabled(): boolean;
    set toggleLabel(value: string);
    get toggleLabel(): string;
    set createLabel(value: string);
    get createLabel(): string;
    set createMenuPosition(value: string);
    get createMenuPosition(): string;
    set createNotifications(value: number);
    get createNotifications(): number;
    set createDisabled(value: boolean);
    get createDisabled(): boolean;
    set hideCreateMenu(value: boolean);
    get hideCreateMenu(): boolean;
    set scrollContainerClass(value: string);
    get scrollContainerClass(): string;
    _hasManualSelected: boolean;
    _disabled: boolean;
    _expanded: boolean;
    _toggleDisabled: boolean;
    _toggleLabel: string;
    _hideCreateMenu: boolean;
    _createDisabled: boolean;
    _createLabel: string;
    _createMenuPosition: string;
    _createNotifications: number;
    _showCreateDropdown: boolean;
    _scrollContainerClass: string;
    private get _createNotification();
    private get _createSection();
    private _propagateProperties;
    private _resizeTimer;
    private _handleResize;
    _othersTopItem: HTMLElement | null;
    private _getTopMenuItems;
    private _updateTopMenu;
    private _checkWindowInnerwidth;
    private _clickedOutsideCreateMenu;
    _closeCreateDropdown(): void;
    _handleDocumentClick(event: Event): void;
    _openCreateMenu(): void;
    _toggleCreateMenuTooltip(): void;
    _toggleSidemenu(): void;
    _handleCreateMouseEnter(): void;
    _handleCreateMouseLeave(): void;
    _handleCreateMouseDown(): void;
    _handleCreateFocusout(event: any): void;
    _handleCreateMouseUp(): void;
    _handleMenuClick(event: MouseEvent, item: MenuItem): void;
    _selectSidenenuItem(event: MouseEvent): void;
    private _dropdown;
    private get _scrollContainer();
    private _getCreateDropdownFixedPosition;
    _handleContainerScroll(): void;
    _handleAxia(): void;
    firstUpdated(): Promise<void>;
    updated(changedProperties: Map<string | number | symbol, unknown>): void;
    render(): import('lit-html').TemplateResult;
}
export {};
