import { LitElement } from 'lit';

export declare class InputField extends LitElement {
    static get styles(): import('lit').CSSResult;
    set value(value: string);
    get value(): string;
    set type(type: string);
    get type(): string;
    set label(label: string);
    get label(): string;
    set description(description: string);
    get description(): string;
    set placeHolder(placeHolder: string);
    get placeHolder(): string;
    set required(required: boolean);
    get required(): boolean;
    set disabled(disabled: boolean);
    get disabled(): boolean;
    set readonly(readonly: boolean);
    get readonly(): boolean;
    set icon(icon: string);
    get icon(): string;
    set clearable(clearable: boolean);
    get clearable(): boolean;
    set showError(showError: boolean);
    get showError(): boolean;
    set maxLength(maxLength: number);
    get maxLength(): number;
    set minLength(minLength: number);
    get minLength(): number;
    set max(max: number);
    get max(): number;
    set min(min: number);
    get min(): number;
    set step(step: number);
    get step(): number;
    get _input(): HTMLInputElement | null | undefined;
    private _type;
    private _value;
    private _label;
    private _description;
    private _placeHolder;
    private _icon;
    private _maxLength;
    private _minLength;
    private _max;
    private _min;
    private _step;
    private _isInputFocused;
    private _isGroupFocusedVisible;
    private _isTypeNumeric;
    private _clearable;
    private _showError;
    private _required;
    private _disabled;
    private _readonly;
    private _handleInput;
    private _handleKeypress;
    private _handleKeyup;
    private _handleFocus;
    private _handleFocusOut;
    private _handleBlur;
    private _handelLabelClick;
    private _cleanInput;
    private _stepUp;
    private _stepDown;
    private _dispatchValueChange;
    firstUpdated(): Promise<void>;
    render(): import('lit-html').TemplateResult<1>;
}
