import { LitElement } from 'lit';

export type CatalogOption = {
    value: string;
    icon?: string;
};
export declare class SearchBar extends LitElement {
    static get styles(): import('lit').CSSResult[];
    private get _input();
    set multiple(value: boolean);
    set icon(icon: string);
    set inputSize(size: string);
    set helpText(text: string);
    set invalid(status: boolean);
    set threshold(value: number);
    set searchTerms(data: string[]);
    set catalog(data: CatalogOption[]);
    set emptyDropdownText(text: string);
    set recentSearchesText(text: string);
    set recentSearches(value: boolean);
    set isCatalogLoading(value: boolean);
    set dropdownStyle(style: string);
    private _multiple;
    private _icon;
    private _placeholder;
    private _inputSize;
    private _invalid;
    private _helpText;
    private _isFocused;
    private _showClearButton;
    private _threshold;
    private _searchTerms;
    private _catalog;
    private _filteredCatalog;
    private _showDropdown;
    private _isCatalogLoading;
    private _emptyDropdownText;
    private _recentSearches;
    private _recentSearchesText;
    private _dropdownStyle;
    private _searchboxStyle;
    private _showAllChips;
    private _getSearchStyle;
    private get _inputValidity();
    private _handleClick;
    private _handleInput;
    private _handleFocusIn;
    private _handleFocusOut;
    private _handleKeyDown;
    private _focusInput;
    private _clearSearch;
    private _hideDropdown;
    private _getFilterCatalog;
    private _generateSearchChips;
    private _generateFilterCatalog;
    private _dispatchSearchChange;
    private _closeDropdown;
    private observerConfig;
    private callback;
    private observer;
    disconnectedCallback(): void;
    firstUpdated(): Promise<void>;
    render(): import('lit-html').TemplateResult<1>;
}
