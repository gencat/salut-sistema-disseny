import { LitElement } from 'lit';

export type DssTimepickerOption = {
    value: string;
    state: string;
};
export declare class Calendar extends LitElement {
    static get styles(): import('lit').CSSResult[];
    set selectedDate(selectedDate: string);
    set minDate(minDate: string);
    set maxDate(maxDate: string);
    set showTime(showTime: boolean);
    set showButtons(showButtons: boolean);
    set leftLabel(leftLabel: string);
    set rightLabel(rightLabel: string);
    set timepicker(value: string);
    set minutesRange(value: number);
    set minHour(value: number);
    set maxHour(value: number);
    set customTimeListOptions(options: DssTimepickerOption[]);
    set timepickerLabel(label: string);
    private _timepicker;
    private _minutesRange;
    private _minHour;
    private _maxHour;
    private _customTimeListOptions;
    private _timepickerLabel;
    private _date;
    private _currYear;
    private _currMonth;
    private _currHour;
    private _currMin;
    private _days;
    private _selectedDate;
    private _showTime;
    private _showButtons;
    private _leftLabel;
    private _rightLabel;
    private _minDate;
    private _maxDate;
    private _timepickerValue;
    private _showMonthSelector;
    private _showYearSelector;
    private _yearsRangeStart;
    private _yearsRangeEnd;
    private _prev;
    private _next;
    private _update;
    private _getDays;
    private _isToday;
    private _isInactive;
    private _isSelected;
    private _selectDate;
    private _onCancel;
    private _onAccept;
    private _emitDate;
    private _updateCurrentDate;
    private _getDateString;
    private _onSelectTime;
    private _toggleMonthSelector;
    private _onMonthSelectorClick;
    private _toggleYearSelector;
    private _onYearSelectorClick;
    private _generateYearsRangeOptions;
    private _generateMonthsOptions;
    private _onYearRangeStepUp;
    private _onYearRangeStepDown;
    private _onHeaderMonthKeyDown;
    private _onHeaderYearKeyDown;
    render(): import('lit-html').TemplateResult<1>;
}
