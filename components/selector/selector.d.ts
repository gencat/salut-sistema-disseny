import { LitElement } from 'lit';

export type SelectorElement = {
    label: string;
    value: string;
};
export declare class Selector extends LitElement {
    static get styles(): import('lit').CSSResult[];
    readonly: boolean;
    set multiple(multiple: boolean);
    get multiple(): boolean;
    set tick(tick: boolean);
    get tick(): boolean;
    set deselectable(deselectable: boolean);
    get deselectable(): boolean;
    set disabled(disabled: boolean);
    get disabled(): boolean;
    set elements(elements: Array<SelectorElement>);
    get elements(): Array<SelectorElement>;
    set selectedValue(value: string[]);
    get selectedValue(): string[];
    set type(value: string);
    get type(): string;
    set boxStyle(style: string);
    get boxStyle(): string;
    set filtre(filtre: string);
    get filtre(): string;
    set labelSelectAll(labelSelectAll: string);
    get labelSelectAll(): string;
    set labelDeselectAll(labelDeselectAll: string);
    get labelDeselectAll(): string;
    set selectAll(selectAll: boolean);
    get selectAll(): boolean;
    set filterThreshold(value: number);
    get filterThreshold(): number;
    set elementsSelected(elementsSelected: number);
    get elementsSelected(): number;
    set ariaLabel(label: string);
    get ariaLabel(): string;
    isDisplayed: undefined;
    private _valueIsSelected;
    private _manuallySelect;
    private _manuallySelectAll;
    private _returnSelecteAllValues;
    private _returnSelectedValues;
    private _getIndexSubtext;
    private _elementId;
    private _elements;
    private _elementSelectAll;
    private _selectedValue;
    private _multiple;
    private _deselectable;
    private _disabled;
    private _tick;
    private _type;
    private _style;
    private _filtre;
    private _labelSelectAll;
    private _labelDeselectAll;
    private _selectAll;
    private _isAllSelected;
    private _elementsSelected;
    private _emptySelectorLabel;
    private _emptyFilterLabel;
    private _filterThreshold;
    private _ariaLabel;
    private _focusEvent;
    private _blurEvent;
    firstUpdated(): Promise<void>;
    private _areAllElementsSelected;
    private generateListInputsElements;
    private generatElementSelectAll;
    render(): import('lit-html').TemplateResult;
}
