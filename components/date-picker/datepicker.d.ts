import { LitElement } from 'lit';

export type DssTimepickerOption = {
    value: string;
    state: string;
};
export declare class Datepicker_ extends LitElement {
    static get styles(): import('lit').CSSResult[];
    private get _input();
    private get _label();
    set showTime(showTime: boolean);
    set showButtons(showButtons: boolean);
    set leftLabel(leftLabel: string);
    set rightLabel(rightLabel: string);
    set minDate(minDate: string);
    set maxDate(maxDate: string);
    set invalid(invalid: boolean);
    set inputSize(size: string);
    set helpText(text: string);
    set timepicker(value: string);
    set minutesRange(value: number);
    set minHour(value: number);
    set maxHour(value: number);
    set customTimeListOptions(options: DssTimepickerOption[]);
    set timepickerLabel(label: string);
    private _timepickerLabel;
    private _timepicker;
    private _minutesRange;
    private _minHour;
    private _maxHour;
    private _customTimeListOptions;
    private _icon;
    private _placeholder;
    private _previousDate;
    private _minDate;
    private _maxDate;
    private _showCalendar;
    private _showTime;
    private _invalid;
    private _showButtons;
    private _required;
    private _disabled;
    private _readonly;
    private _leftLabel;
    private _rightLabel;
    private _isFocused;
    private _helpText;
    private _inputSize;
    private _inputValidity;
    private _calendarTag;
    private observerConfig;
    private callback;
    private observer;
    disconnectedCallback(): void;
    firstUpdated(): Promise<void>;
    private _checkInputAttributes;
    private _handleValidity;
    private _closeDropdown;
    private _handleKeyUp;
    private _handleInput;
    private _formatDate;
    private _handleFocus;
    private _handleBlur;
    private _focusInput;
    private _handleClick;
    private _onDateChange;
    private _onCancel;
    private _dispatchValueChange;
    render(): import('lit-html').TemplateResult;
}
